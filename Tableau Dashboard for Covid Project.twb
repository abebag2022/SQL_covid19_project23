<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (tableau table 1)' inline='true' name='federated.03dvkg41ssyow5126owgs00mw1tm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.16vk0kz1pozauc107ek150jl6c5w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abeba/OneDrive/Documents/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.16vk0kz1pozauc107ek150jl6c5w' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_death' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_24E1A6C6AC9D4258A1A9590B93AD4A32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_24E1A6C6AC9D4258A1A9590B93AD4A32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_24E1A6C6AC9D4258A1A9590B93AD4A32]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_24E1A6C6AC9D4258A1A9590B93AD4A32]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Death' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abeba/AppData/Local/Temp/TableauTemp/#TableauTemp_1iry9ug11ylcl31ewpr8u1bxhtj1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/12/2024 02:29:06 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_24E1A6C6AC9D4258A1A9590B93AD4A32'>
            <properties context=''>
              <relation connection='excel-direct.16vk0kz1pozauc107ek150jl6c5w' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_death' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.05j4b66061ytaj1ec0f7t1tm0q93' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.0rh4ss70m784fm12s444m1lszkns'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abeba/OneDrive/Documents/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0rh4ss70m784fm12s444m1lszkns' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestCovidCases' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BFC0D6648317409B949324DCCA07B484]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BFC0D6648317409B949324DCCA07B484]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestCovidCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestCovidCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestCovidCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BFC0D6648317409B949324DCCA07B484]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BFC0D6648317409B949324DCCA07B484]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Covid Cases' datatype='integer' name='[HighestCovidCases]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BFC0D6648317409B949324DCCA07B484]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abeba/AppData/Local/Temp/TableauTemp/#TableauTemp_0ucharj14xchbf14c30bq0jvhsic.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/12/2024 02:31:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestCovidCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestCovidCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestCovidCases</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BFC0D6648317409B949324DCCA07B484'>
            <properties context=''>
              <relation connection='excel-direct.0rh4ss70m784fm12s444m1lszkns' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestCovidCases' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.1pq4avo1m3fts0180lsrj00my6is' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.1rgl5cg0izoxze13abi0c1wbp42s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abeba/OneDrive/Documents/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1rgl5cg0izoxze13abi0c1wbp42s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E8774FB5E340465D90751E2834A042A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E8774FB5E340465D90751E2834A042A0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E8774FB5E340465D90751E2834A042A0]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abeba/AppData/Local/Temp/TableauTemp/#TableauTemp_0yum28n1vv166i194mr2c1d9tfkv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/12/2024 02:31:10 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E8774FB5E340465D90751E2834A042A0'>
            <properties context=''>
              <relation connection='excel-direct.1rgl5cg0izoxze13abi0c1wbp42s' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.0yi18ti1b1zx4n19nt17c1ftoyhz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.16p0hxs09boox2112kb9s1hze3ox'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/abeba/OneDrive/Documents/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.16p0hxs09boox2112kb9s1hze3ox' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestCovidCases' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestCovidCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestCovidCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestCovidCases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Covid Cases' datatype='integer' name='[HighestCovidCases]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4B808067E23D4F8ABA20A5ABC694985A]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/abeba/AppData/Local/Temp/TableauTemp/#TableauTemp_15j1ge50t82d5j12kmoht0adk557.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/12/2024 02:33:44 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>304</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1159</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestCovidCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestCovidCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestCovidCases</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18862</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31224</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4B808067E23D4F8ABA20A5ABC694985A'>
            <properties context=''>
              <relation connection='excel-direct.16p0hxs09boox2112kb9s1hze3ox' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestCovidCases' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 1)' name='federated.03dvkg41ssyow5126owgs00mw1tm' />
          </datasources>
          <datasource-dependencies datasource='federated.03dvkg41ssyow5126owgs00mw1tm'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_death]' derivation='Sum' name='[sum:total_death:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Death' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:total_death:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:total_death:qk]&quot;</bucket>
              <bucket>&quot;[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]' value='150' />
            <format attr='height' value='53' />
            <format attr='text-format' field='[federated.03dvkg41ssyow5126owgs00mw1tm].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.03dvkg41ssyow5126owgs00mw1tm].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]' value='24' />
            <format attr='background-color' value='#69ff0c' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#aaaa68' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.03dvkg41ssyow5126owgs00mw1tm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EC636EEA-9D29-4C07-9197-B2D824B65C5E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death per continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.1pq4avo1m3fts0180lsrj00my6is' />
          </datasources>
          <datasource-dependencies datasource='federated.1pq4avo1m3fts0180lsrj00my6is'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pq4avo1m3fts0180lsrj00my6is].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{00044956-DD46-4883-A35E-DD9C1C5E43EF}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.05j4b66061ytaj1ec0f7t1tm0q93' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05j4b66061ytaj1ec0f7t1tm0q93'>
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[Longitude (generated)]' field-type='quantitative' max='11712204.600555707' min='-18105156.377189089' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[Latitude (generated)]' field-type='quantitative' max='9263213.8748240508' min='-6378679.5345241027' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[none:location:nk]' />
              <color column='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05j4b66061ytaj1ec0f7t1tm0q93].[Latitude (generated)]</rows>
        <cols>[federated.05j4b66061ytaj1ec0f7t1tm0q93].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{ABE2550A-4A05-43FB-9D92-A6D87788ECEC}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.0yi18ti1b1zx4n19nt17c1ftoyhz' />
          </datasources>
          <datasource-dependencies datasource='federated.0yi18ti1b1zx4n19nt17c1ftoyhz'>
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]' />
              <text column='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]' />
              <color column='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]' />
              <text column='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{CC520192-1A63-4485-961D-4F9F90911B02}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{89B3EA68-1C39-404D-B4FE-4104109F8802}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='11' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone h='98004' id='8' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
              <zone h='98004' id='6' type-v2='layout-basic' w='97538' x='1231' y='998'>
                <zone h='98004' id='3' name='Sheet 1' w='97538' x='1231' y='998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='12' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='280' h='98004' id='3' is-fixed='true' name='Sheet 1' w='97538' x='1231' y='998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7102AC8A-F48E-48E0-810E-2E09439B4798}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='19' param='horz' type-v2='layout-flow' w='99030' x='485' y='999'>
            <zone h='98002' id='17' type-v2='layout-basic' w='99030' x='485' y='999'>
              <zone h='20224' id='3' name='Sheet 1' w='42431' x='485' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33708' id='12' name='Sheet 2' w='31217' x='485' y='21223'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='143' h='33708' id='15' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' type-v2='color' w='11214' x='31702' y='21223'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53932' id='16' name='Sheet 3' w='46727' x='42916' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44070' id='21' name='Sheet 4' w='89158' x='485' y='54931'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42696' id='22' name='Sheet 4' pane-specification-id='0' param='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]&#10;[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]' type-v2='color' w='9872' x='89643' y='56305'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55306' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9872' x='89643' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='23' param='vert' type-v2='layout-flow' w='99030' x='485' y='999'>
                <zone fixed-size='154' h='20224' id='3' is-fixed='true' name='Sheet 1' w='42431' x='485' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53932' id='16' is-fixed='true' name='Sheet 3' w='46727' x='42916' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='55306' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9872' x='89643' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='261' h='33708' id='12' is-fixed='true' name='Sheet 2' w='31217' x='485' y='21223'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='33708' id='15' name='Sheet 2' pane-specification-id='0' param='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' type-v2='color' w='11214' x='31702' y='21223'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44070' id='21' is-fixed='true' name='Sheet 4' w='89158' x='485' y='54931'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='42696' id='22' name='Sheet 4' pane-specification-id='0' param='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]&#10;[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]' type-v2='color' w='9872' x='89643' y='56305'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{49DE96FE-456E-47E4-BD21-D9F394E7A9B5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03dvkg41ssyow5126owgs00mw1tm].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{286FE2AA-FF8B-498A-B31F-8666A1774209}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1pq4avo1m3fts0180lsrj00my6is].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FFA4C3B1-E639-4B4C-9FAC-0D8B617A409F}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05j4b66061ytaj1ec0f7t1tm0q93].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05j4b66061ytaj1ec0f7t1tm0q93].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3042BE4C-7C93-44AA-9B57-7AB8DE80B843}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]&#10;[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]</field>
            <field>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]</field>
            <field>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44E75413-CF1D-4346-A15F-A1CAB1D75C92}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{60D3AA82-D855-4454-9A59-A90C9677FAD2}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A149AFED-3DB6-4120-9CCB-41FE88CA0424}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1pq4avo1m3fts0180lsrj00my6is].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:Forecast Indicator:nk]</field>
              <field>[federated.0yi18ti1b1zx4n19nt17c1ftoyhz].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9DDCE144-AFB6-4763-B9C4-0E2F097421A7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='81' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUxUlEQVR4nO3dSXMbaX7n8W8uSOwAARDcFxVF7VVdZam63DM94/ASXg62L744wuH34KMv
      vvvom1+ATz744ImJ2SPcdjt63NFWd2mnSIoSSZEgse9Lrj5QparqItUikSlRzP8nQiEKTD35
      ZzJ/yAXPk4/ieZ6HECGlvu8ChHifJAAi1CQAwneONWRzY5Oh5bxhmQH1VvcdVnU8/X0XIC6e
      //nf/xuffvFDRiOTjYePKC5dxexUqFUbLMzl+bt/+N/8yR//Dntlk9nYEDM1y1xWY+1FmRuX
      59nZO0SLZXjyL/9I6tZv8dvfvxnYO7UEQPiuN4LF+Xk2//3/Mcjc4kf/939hW0N+eGuOtUqO
      uYVLTOUM7j3cIZ10efxoi3/rlJnITtAov8DKrtJ58P+ZyxVZ/Ti4nR/kFEgEYDoX5Uf/8mPM
      SIadtXto8Qx6NEY0ouGpOlarTLnZAyCqqyhAIZcjP7/K4mSKeDwOCuQLaR7cf4wbYK2K3AYV
      fvM8D9d1UVUVz3VRVBXP81AU5fX3URT46q9X3/vq/3y1zNFrHqp2FJIgvA7APz8/YLsZ7EXJ
      bCrG715ZCHQdQpzG62uA9sik0h8GurKELmdc4nyRPVKEmgRAhJoEQISaBECEmgRAhJoEQITa
      +e4KUX8K7skdqs4kfxXU8/1ji3fnTHuCPeiiGClULLr1BsnJIk6/jeVqxFNJ+rUy0ewkeDZ6
      JII5MjFisdOv6Nn/AHtwlhJP9vlfSADEa6feE1xrSOnLfyJ164+wS2voySSVnQFWs46mwyiZ
      wlSiNCvrGDENQ/UgM3e2AAgRsFMHQI3EmFxaYgi4aoSJuQXKTx+iZ2ZJxU0qe3WW7lyhur6G
      2anRNnVWlq5SfbFJaiKNfWPprdelge99QGzHAcX2uVXxoTp1AJxRj9rOLmYmQybqsP/4EdH8
      LIODbWpNjcm5KV4+uIduxDHSBSbiBrVSmclLqxQyCXT9/Z5+6JoG77kGcX6c4QgQZ+bO7wIK
      WkTHsW00PYI3XcTzFFRNJTE5i6pHwPNQVIW4G2SHViHO7tQBUFQV3Yh+3UDEOHpd+7op7dVr
      vOr+qqraODUKERj5HECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRA
      hNpYARjUSuw9usdoaNHcWefg2RauPWL/4S9o11r06lVcq0e72vCrXiF8NVa/4Ealyszljzh4
      /hhVTZOI25QePyF//ROaW0/RdIVOySR/9RNsc4Rtapz2UaR+jwfwAORxqOKVsQKQzU9wuLmB
      43loiQiqDo7joesaiqpij7pYIwVVVegelunZKRzn7cf4BtGH1HVcPMXnccbigzXmyBAF11Mp
      Xr5JZ3eNVlNn7voK+/fvkiguENEypLIpWuUK+blFsudgQIymqTIgRrw21p6QnFogOXX0tOf4
      tU9fv7702effWi4fz46zGiECI3eBRKhJAESoSQBEqEkARKhJAESoyf1An3hWH7fyyN9GI3G0
      4sf+tim+RQLgE693yOjHf+Vrm0r2I+J/8Le+tim+TU6BRKhJAESoSQBEqEkARKhJAESojXUX
      qL71mH63T6y4iFndwXY1pi8tUHq2QyxXxNBdkqkY3VGEwsykXzUL4ZuxAuC57tEfs4WanCef
      MClt7rF4+w7VjacMOg2a5QiXbt+58BNkeKcY53CKVrFtmcwjSGMFYNAfMnPtGofPXqCoLiPP
      IZHU6XX62LaNkc4TtUb0e6MLP0GGq2lYvreqvPftddGNtXWnVi5T3X5J8coN7FaZoa1TXClS
      e/aU/PIqimcSTSbpt9qAzBEmzp+xAmCkcsxezwEQnVog+er1ydWbr7462umTE7lxViNEYOQu
      kAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAINQmACDUJgAg1CYAItbH6AvVrBwx7A2K5
      IjoWpqORzKbplveJ5afBtYkYBuZghJGI+1WzEL4ZKwCRRBpn1KNTr2O1GugRD6sRxzLStDfX
      MWI6EcVFnVjASPhVshD+GS8A8ST17T6TK4tU3AipuEllr87SnWtUe23MTo22qbOynJQBMWdr
      VQbEBGysADj9OsRyaJE0Vv0JVUWjuDDD7pd3icQzGOkCuWSM6v4hRRkQcwYyICZoY21dNZ5j
      ajkHisLC7V8HTwEFksUFUI7euxUF4jIllzinxgqAoijf+Fr9+nxFUX5puXHWIkRw5PgaUp5t
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZv0lEQVR4nO3d2XNc55nf8e9ZekXv2AFiI0EABEnRI2k0jh3LcjJjzzgZzeKqqalKJZWl
      cpXLXOXO/0NSlavUVJIqZ6mK7dg1mc2eUWQrGu3iAmLfFwLdaPS+nPXNBShaGqElQiAoNvr5
      VLFENA6aL8Xz6/MuzzmvppRSCNGh9C+7AUJ8mZ5oAHzff5JvJ8S5e6IBkN6UaDfSBRIdTQIg
      OpoEQHQ0CYDoaBIA0dEkAKKjSQBERzt1AHzXZmnhPqWaBSj2dneR5S/Rrk4dgHqtxsjEFdaX
      lyhld5mbX8M7j5YJ8RSYp/2BSDTC/P0Fxi5P8N7bb6Ecj3yxSm88gud5shos2sqpA7C5PE/N
      06hUmrz8yiusLi6TTkQx9OOLiWEYT7yRQpwX7UmWQ3ueJwEQbUVmgURHkwCIjiYBEB1NAiA6
      mgRAdDQJgOhoEgDR0SQAoqOdeiXYqpdZXd+ie2AU3S5ycFTn6vQUIVOyJNrP6c9azeTq1BQP
      draIJroZTAc4yNfOoWlCnL9TXwE0XObmlpm+fpNKdotCM8DU5Rie50kxnGg7pw7A/vYWHhq5
      XJaDzR3C8RSVpkMiEgSkGE60FymGEx1NRq6io0kAREeTAIiOJgEQHU0CIDqaBEB0NAmA6GgS
      ANHRTr0SXC3mWNt6QLJnkIBTJldqMntjloCunUf7hDhXp14J9jwPz66ztL6DgcHoYIzDZpSR
      /gS+76PrclER7eP05dC1Iqvbh8zMTLKyuAFo8DBCSikphhNt5dQBKOQP8TybBwcFElGN5e08
      s9evo+saSimpBRJtRYrhREeTDrvoaBIA0dEkAKKjSQBER5MAiI4mARAdTQIgOpoEQHS0UwfA
      qpf5xZtvA4ql+3f44IP3KTecc2iaEOfv1KUQRiBCMh4BFJZlg1LYtocX1OXBWKLtnDoAZiCA
      rmngu7iEGR2IUqk16E6EpBZItJ1TB6CcP6BRb7C6k6MvE+FBwWZyKoGmaY9+CdEuTiyG8+wm
      C4uLuP7x15MzN+kKff5wQYrhRLs5+azWwM4ts1lSlPbWyNVkkCsuphMDYATC3Pr6t3H2l9kv
      +2S6Tt1TEqIttOzXeHaNQqnA9dkZGo7/NNskxFPTOgBWDctq8sabb+PLzKa4oFreEWaVc5T9
      CIZVIZjqIxb6/MGtDIJFu2nZuX/jL/4ny/YQKa3OK6/+0WMFQIh20/IKUH2wwKYzQK9eJNw7
      QkKuAOICajkGMAydpfl73Pngfar2JwfB1VoVAM+xODjI4skgQbSplgEI915G5ZdJj8ySif7q
      U71ezvPGW+8DisWFBTRdkwCIttVyDFDbvo0V6cWvHrBTmGCyJwRANNHNcH8GcMhnCzQtC4cg
      A5mYFMOJtnNiAHyniR8bJmnusl9TfCUTfPS9avGQ3d1dkuleUpkuNCOApmmP+v4yBhDt5MRB
      sFM54L/8yX8iNPoSAzF48evfIhU5PrE9z8V1PTRdJ2DoOK5PIBBA02QQLNpPy1mg+tEu20Wf
      aAD6BocJmVIMJy6elmMAVT/kvbuHDCUNEj1DhKQcSFxALU9rPZKg+OBd9EYXjicDW3ExnRgA
      16rxwfwW169NAhAw5SYXcTGdGADdDHF1auZREVwkIA+PEBfTiWe2bpj09PaiXAfbtmVuX1xY
      LccA9d27vPZhgUspk2SvDILFxdSyb6NHkhR319jZ2cF25QogLqbWtUDpQcYGUoTjvSQ/Vguk
      lCKby330FXu7u8j9YqJdtQxAdfsuqZmXudlvsFWwH73eqBS4O78EQCm7y9z8Gt75t1OIc9Gy
      Zx8beQ73tdfYMJN8M/2rWqBoIkN/dxLlWbx3Zx7leOSLVXrjESmGE23nxAA4tQJvv/seq1t7
      wB5Hv/YCffHjQ8v5A3Z2dojE0rz8yiusLi6TTkQxHu4PLKUQop20rAUqbHxAMXGD6NE8ds8M
      I6ngSYd9gtQCiXbTsgt058MPWK6u0pdJ8e3xG0+zTUI8NS0HwV/95m9iFx+wt7NJqSHDXHEx
      tX4uULPClWs3MZSHJcVw4oI6cQzgew7ZbBbPB9/36R+8RPAxCuJkDCDaTYtbIi3mPnyXtZ0s
      AK/+8b+gPy61EOLiOfGsNsMxvvHyy0Ruz5Pf28TxZa1XXEwtP9Y9u8HW1ha2ZRM0pBxaXEwt
      AxCKxgjoEEj3k4pIAMTF1PLMLj9Ypmak0Epb/PgvX+ejjSCtepm5xVUADg9z1CtHlKrWU2ms
      EE9ayytAfPgGMzv/j6b5AlMTIwQeTu4YwQieUwcgk+lmc3mO+MAknudJLZBoOy0D0DxcJudn
      SJXWcUI3+eipKKb5cJdIFOtLcyQHr9CdjMDDE1/Xpbsk2kfLAISTAzSyr9NE57mP3Q/waJfI
      rV0cx+fB1hrBySkSkeNaIdklUrSTkxfC7Bo//OGP8YIp/uD3v0tQf7yTWhbCRLs5sb/SKO4T
      7RslY1Z4/+6i7BEmLqwTAxBODtIXM4n1jqHqBVypBRIXVMv7ATynia+H0X0LXw8SMKQWSFw8
      LQfB7/3sf7CuLhOpbHLrO3/E2GPcECNEu2kZgNHp5wk0wvSkJhlMBJ5mm4R4alpO2ifCOrfv
      3ef2B+9RacogWFxMrWucA0HKhznCKiZ7gIkLq/WDsVJDjA0keemlrxEKfnIAXK0e7xJpN2sc
      HpXOt4VCnKOWAagfLFPxDFYX7pCrur96vZznjbffB3wWF5YpZbfIlppPo61CPHEtu0DRvklG
      eo5wtABDHxsEf3yXyEAoyfBwnINSFS8WkGI40XZaBqCRXYGeKYZqC+xXHMbTx9ukVgqH7Ozs
      kEj14FpHzC8eMjZzS3aJFG3pMxfC3nnrbyHSw0vPX39YAQq+5+F6x7tEGg83yQ6YxzmShTDR
      blqOAZzKAes5i5HBDO7HHgukGwbBYJCAaaLrxqOTX4h21Hp/gGAM08rz4e271KUYTlxQLQPg
      VvbJVy1G+zIcNdxWhwnR1loGIJQaIm66vH1vnd6YdHPExXTyg7GsCv/rR3+KERvgn/7hP37s
      G2KEaDcn3xBTyhJI9dGljnjjrQ+oWTIGEBfTiVeAcGqYqZEqrt9//IJcAMQF1XId4CO+76Fp
      +mPd7C7rAKLdfO4zTDbm3yNXPWl/AEUpv8/S6ia+lD+INtVyescu7fDf/vfr4NvEN6q8+t1/
      wCefkO6zurHPpd4IO7kao32x82+tEE9YywA41TxDs7/BQHOVA8sn34D+6McOUGBqLtsHRcam
      RuXJcKIttQxAIDWOfv9Nat2XeH52iFTk7x6hUAp03fhE31/GAKKdtAyAbppEw2Hm3nmdscl/
      zaeWAjSTWy+8eM7NE+J8tS6Gq5fYzR5x86WX6emSlWBxMZ0YAKV8SjWLWBDu33mfclN2iRQX
      04kBsMtZ/vN//e9ogTA3fv3rZKLSrxcXU8uFMKU8luduM7e4xsu//ft0P0Y3SBbCRLv53JXg
      05AAiHYju1mIjiYBEB1NAiA62pkCUCnkmLu/gOXK/QKiPZ0hAB4L84vohokhd4yJNnWGJV4f
      ZUS51BNlczfH+FC3FMOJtnOGAAToy0RY3c4yPnlNiuFEW5J1ANHRZBZIdDQJgOhoEgDR0SQA
      oqNJAERHkwCIjrVVODrLOoAQ7ev11WV+8N47sg4gOouvFK+tLPHa8jL/5hsvn60L5Dt1/uz/
      /AznSbVOiHPUcBz+4y9f57XlJf7db32H/njiDF0gpVhZ2eDS8ACAPBhLPNN2ikX+/S//L18Z
      GuZfvvRtApqG67pfPADKd7Bsi53tPbpHRhnKJACpBRLPFl8p3t7c4E/eepN/9dWv8eujY594
      0POZxwCVcpmuRAIdGQOIZ4vtufzg3XdYyB7wb7/1D+mNxT91jAyCxYWUrVT4D794jcFEkn/+
      G18lEgieeJxMg4oLQynFXrnEXy3M89bmBn/8/It848rkoz2uTyJXANH2HM/jg51t/nz+Poe1
      Kt+5Nsvfn7hCMvKpJzp/ilwBRFtSSlFsNPj50iKvry7TF4/zB8/dYrp/gOApPoTlCiDaiuf7
      rORy/NnCHIsHB7w8eZXfmp6hp+uLbdAiARBtoeE4/HJthb9aXMDUdX7n2nVeHB1tObh9XBIA
      8czylWKnWOBnS4u8u7XJ7MAAv3v9OUbS6c8c2H4epTwK+7fZWfihBEA8O1zPY79SZqtQYC1/
      yHIuS7nZ5Nsz1/jaxGWS4c8f1H4Wz22S3Xqd3aWfoGk6l6b/8GwB8H0Pz/MxzQCaJgEQj0cp
      hev75Gs1lnNZVg5zrOUP2S+XiYVCTPb0cqWnl+m+PkZSacwznFNKKRqVXXYWf8TB+s9J9t5g
      5Nr3SPXfOt7+9ywB2FpbolAq0TtyjaGemARAnKjpOBxUKmwXCywe7LOWP6RsNYkEgkz29DLZ
      08t4ppvhVIqQ+WQmJj23weHOm+ws/hirnmPwyncZuvqPCEUynzjuTH/a0PAwhXKDZDwixXAC
      XynytRqbhTx7pTKbxSO2CgWajkMmGmU0lWayp5dvTV6lNxY7cQDruu6Z2mDVD9lb/gkH639J
      NDnOyOw/IdV3E90Invj+Z7gC+Lz71tuMTU6RTCYJmoZcATqArxQNx6bYaLBfLrN6mGOvXGKv
      VKLYqJMIRxjPZLiUTDOWyTCaTpOOdqHBJ4rQniTPtSgefMjO4o8o5xcZuvq7XJp6lWCk+3P/
      zDMF4PDggKbj09PXTzhoSgAuoHKzyephjsXsAdvFAnulEo7nEQuFGEwkmch0M5JOM5hIkOmK
      nWoR6qys+iEPVv+c3ZU/JRIbZGTme2QGX8QwQ4/9HjILJIDjwaLjexTqDRYO9rm7t8v6UZ6m
      63Clu4fJ3j5G0xlGUmnioRABwzi3T/TP4vsulfwSOws/JP/gHQYvf5vhqVeJxIfRtNPf3yUB
      6GA1y2K7WGQhu8/8/gN2SyVCpsn1gUGm+/q50tNLXzx+pjn3J8WxShys/zXbiz/CDHQxPP17
      9I2+jBmInul9JQAdQCmFAirNJgvZfZayWeYP9jmsVRlJZZjp72e2f5DRdJquYBBdfzYeFqKU
      olbaZPPeDzjae5ueS1/j0sz3iKUnvtCn/UkkABeQ7XkU6jV2ikVWcjmWclkKjRqu53O5p4eZ
      vgGuDwwynEo9E5/uH/E9G6t+SOnwPqXcHMXsHXzP4dLU7zE4+Ttn/rT/uOO1CEcC0O4832e/
      cjwbs3J4yOZRnoNKmUQ4wkgqzUR396O+eyIcxnhGPt0B7GaRcn6RUvYu5cN5qsV1AqEEsdRl
      kn03SfffIpocRddPN1tvuxYNt0m5UaRiVSg1ixQbBSrNEsVGgWKjSKGex1O+BOBZ5/o+judh
      ey4N26FQr7NVOGL9KM9W4YjDWo2eri4munsYz2S43N3LpVSK4Jc0SD2JUj6uXaVe3qaYvUf5
      8D7Vwiqu2yCWuky87waxnlkiyXHQAzi+g+Va1O0qdbtOw2lQtcrHrzl16nYNy7WoWRUcp47l
      NLDsKrbTwLJrGL5HWNNJmCFiZoikESIZ7CJhhkkGwiTNMOlQjJBSEoAvi+f7VC2LstWk2rQo
      NRvk6zVKjQbFRp1io0GhXqfpuo+6KZFAgEy0i4FEgvFMholMD/3xOMEnsHrq+y5K+aB8fP94
      scj3bACU7+L7Dr7n4HsWvmfjOXU8z8J2mlhuE9u1sDwL223SdG1sz6bpNGh4NtVajqPiJnW7
      goOOFulGj/biBbpwXQvdbaI7DXSnQcC1CDoN4sojonwiyieofIJKEXz0tSKsfAK6QdAMYxom
      QSNEwAwRMsPogTAYQbRABIwQWiAMRgjMIJoZefh6EAIRCcCT9FGNi/vw5D6q1zisVjiqVTiq
      VTmqVajWi5SreRrNCvgOyrcJGxAL6CRDJsmgQSJoEg9qpEJBQrqPjo+uHPCPT0CUwvcdePhP
      9+hEVf7x6/DJE9l3QfmAwvdsfKXwPAvPd3E9G8f3cQALHQeNJjqOpmMDFsaj73louJqOi4ar
      GXi6ScAMEzJCBI0AYTNESNOJAKZVJezZRDyHkGcT9V3Cnk3YtQj7HmHPJgoEdQMjFMcMJzHD
      KfRwAi2SRgvF0cIptHACzPDxSWtG0EKx4xM60IVmmKAZoOm/+qUbpxognykAdrNGue7Sk0kC
      FzcASiks18VyXRp2A8eu07BqVOolKvUi1Vqeai1PvX6E0zii3iiiOWXCWIR1l6ipEwmYRE2T
      aLgLMxjHDEbRjRCGEULTA+hGEMMMohuh498bYTTdxAhE0HXz0Wu6GQQ0PDRsz8Z2LVzA9mws
      16LpOdTtGg3Xou40aLoNLM+l7jSoO3Waro3jO2i6ia8UaAa6btAViBAzgoQ1g7gZIqwbRHWT
      mBEg5HvENB3TaRC0q4Q8m4BdI+TZ6Fbl+Mrhu+B7AGjhBFo4efwrkvnY71No4RSEYmiBLrRQ
      DIKxL7WrdqaV4Lsf3iEaNogPXqUvGT5TAJRSNG0X2/G+WHNavq/36JPwU697Digf265jNQs4
      VolGo4xtlajVC1iNIo1mGbtZxHfrGF4Nz22CUoTDMXTDJBxOEgglUGaUYDiJFkxgBLsIhjNg
      RjCDMZSmozSDkG7gKoVC4XgOtmvj+DbKtXHcJo533Pd13CbKs3EentSO7+A7TRzPPv45p47y
      bDTPOf70912U76I/7B5EzDAR3aDLDBE2QoQ1jWgggqkMopqJqTwM18L0bMyHXRD18H1QCu1h
      dwEzjGaG0IIxCHYdn8TRhyd0JH3831ACzQwddymMIJp5thtUnrYzBMBiYX6P8UtxDkpwaTCN
      4zh4nvdoHtn3P71/8Gd978e/XOK9he0v1pwnQDNDwLMxcDwPpqGjy5a2n3CGACjuffg+jusz
      NnOLTCx4YbtA4uI6+w0xviLwcBZCAiDazZnmz3Td4BlaVxHi1OT0FR1NAiA6mgRAdDQJgOho
      T/zZoK7rfuGVPaXUU//ZTvkzz/KzH00Ufhk/e95/1ydaCwRnmwr9Mv5xv4z2nuXv+WW1F77Y
      SfzRwmjHBOAsjf4ySHvP11nC8zQ88QAI0U4u3P4At999i8s3XsAp7bKd97g1e/nE46rZHbz0
      JZKB46+31hbJl2qMjl9me2ONYCzDQCLA9n6OVO8wdvEBVdfg5o1ZzHOqp1laXmLq6tRnHuPb
      deYWVvD1IMM9UTb3DhmZmKZ8sE6x6jA1Pc7K0hrJniGujA2eqT3Kd5i7O4cyQszMXiPwd6ZM
      7EqeZjBNInTyXIpVK1OxoSedOPH79fIRKxs7BKNJunSLXLHO1MxVNlZWcTCYGEyzuvWAwdFJ
      hnqTj93ud9/6BUYwweS1WeLhwGcea3z/+9///mO/cxsolXJUG9Col3Bdhdsocn9pg66Axftz
      m2henbX1HQzPYnXvgHK5Tl93mngyg107olKq0zt6Bb+cp2d0nKjuUrWbeG6EgUQAy4wQDZ7P
      58b6xga1WoW43mT90GJ5/jYPckVMr8Ha2hp+IEY81kV3JkEum6fpuDx38xo7mztMXp2kdJil
      2WhyaeYmpewOPb29Z2uQ57C+uc3AyBiqUWB5ZY2Gr1idu8fufo56YZfl/TphzWJtbRULxcKH
      91ndWKewvw2RFGsrS2QLFVSzzNr6Op4LcwtzxFK9xGNdJLuCHJZquJ7LtYkBdo5srk4Mk8vl
      qFsOz928ye72Br09PY/d7KNShZuzk6ytbJPb32ZzP49qlljfPEDTbNZW18Epc2dl5+JNg+qB
      OF7jEC0QwUCRO8xTebBPxfO5PH2NWq3BjZuzRENBrl67SUh3AcXG8jxdveMMdndh2fbxjeX7
      2xTsAFdGh3A9C9u1z+UmcqUUvu+iGwaWZeHYDSzHZ+DSOOl4mM3NDXzNQEeh3Dp359eZvXEd
      zfdwbQsfncX79xiemiUR1rEsG9f7dLXtqelBnn/hBSq7y9xfXsf2FboGycwgQ91RovE041eu
      crC9gaN0dE3R3T9CpjvD7OUB6rbG6MRVgrrH5uY6mm6C7zI8fpV0LESjnGd1t8j16St4rodt
      ORi6z717C8zMXsfAx3ZtfHX6/+dOs47CYXs7i6EblOoWN25Mk93ewlbguR4T07MXLwDd3RkG
      envp7R+mr7+XVDrF0MQ4yXiGRNhgYmyEpflF6EoTNSDT3Q0obNtlf3sDYj3YR3vEuvtxmha1
      Yo79wzrdSZOqCpGKPv5Txx6bUqws3GdkfJK+dJLNXIPedBepZJxMdzfXZmcxdINIJIzdqKOU
      x+raBmOjw8wvbTA6PozjOGytrhAbHONoa4m+oZEn0C6PjbVliPXxa8/dIGSaRCMRcg+2qNPF
      8NgVqg9WmJieJWgYRCNxMt1x+vv6MLq66UlHKeV2SfUMMDt7Hd0IEEulSMWPn+7QaDTx7Cob
      O/tc6u9mPVthOBXC8RWrq+uMjY6wNL/EyNj4qZpt+A7reyWmpqeZnhol2hVlbHiQ+YUVJmau
      ETJ0Yqke4kFDBsHitHwq5TrxxBfbkuhZIwEQHe3CdYGEOA0JgOhoEgDRlpxmiZ/+9C/wlM9f
      //THPCg1Pn2Q8jnI5lC1LB8u7X76PeqFi7cQJjqDZ9dYun+P57/6PHfee5/u67e4/eYSscwA
      XnUfXfmkhyb4yU9+yj979Zv8zRub7G328du/+U2W777D2n6Vga6qXAFE+5q+Osrf/vw1Biav
      sX3vLTLTf4/c1iLb2SLXxnvZryguX5lkuC/J0PhV6oUDfOVzZ3GDPr1AI9AtVwDRnvRAhNGZ
      r7C9tsStS72Y/cMs3n6TvrEZcKsEY2n6iRKuRtkt+Yz0p9C7RtA0nVszE6ztV3lxpE+mQUVn
      ky6Q6Gj/H0Zro4jBLcx+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
